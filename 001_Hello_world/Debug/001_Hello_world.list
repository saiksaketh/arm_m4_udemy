
001_Hello_world.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b80  0800013c  0800013c  0001013c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000014  08000cbc  08000cbc  00010cbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08000cd0  08000cd0  00010cd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000cd4  08000cd4  00010cd4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         0000005c  20000008  08000cd8  00020008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000016c  20000064  08000d34  00020064  2**2
                  ALLOC
  7 ._user_heap_stack 00001400  200001d0  08000d34  000201d0  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
  9 .comment      00000043  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 10 .debug_info   000008c3  00000000  00000000  000200d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 000002cb  00000000  00000000  0002099a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00000118  00000000  00000000  00020c68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 000000be  00000000  00000000  00020d80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  00002c89  00000000  00000000  00020e3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   00001419  00000000  00000000  00023ac7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00009716  00000000  00000000  00024ee0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame  000009a8  00000000  00000000  0002e5f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000006d  00000000  00000000  0002efa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800013c <__do_global_dtors_aux>:
 800013c:	b510      	push	{r4, lr}
 800013e:	4c05      	ldr	r4, [pc, #20]	; (8000154 <__do_global_dtors_aux+0x18>)
 8000140:	7823      	ldrb	r3, [r4, #0]
 8000142:	b933      	cbnz	r3, 8000152 <__do_global_dtors_aux+0x16>
 8000144:	4b04      	ldr	r3, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x1c>)
 8000146:	b113      	cbz	r3, 800014e <__do_global_dtors_aux+0x12>
 8000148:	4804      	ldr	r0, [pc, #16]	; (800015c <__do_global_dtors_aux+0x20>)
 800014a:	f3af 8000 	nop.w
 800014e:	2301      	movs	r3, #1
 8000150:	7023      	strb	r3, [r4, #0]
 8000152:	bd10      	pop	{r4, pc}
 8000154:	20000064 	.word	0x20000064
 8000158:	00000000 	.word	0x00000000
 800015c:	08000ca4 	.word	0x08000ca4

08000160 <frame_dummy>:
 8000160:	b508      	push	{r3, lr}
 8000162:	4b03      	ldr	r3, [pc, #12]	; (8000170 <frame_dummy+0x10>)
 8000164:	b11b      	cbz	r3, 800016e <frame_dummy+0xe>
 8000166:	4903      	ldr	r1, [pc, #12]	; (8000174 <frame_dummy+0x14>)
 8000168:	4803      	ldr	r0, [pc, #12]	; (8000178 <frame_dummy+0x18>)
 800016a:	f3af 8000 	nop.w
 800016e:	bd08      	pop	{r3, pc}
 8000170:	00000000 	.word	0x00000000
 8000174:	20000068 	.word	0x20000068
 8000178:	08000ca4 	.word	0x08000ca4

0800017c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800017c:	b580      	push	{r7, lr}
 800017e:	af00      	add	r7, sp, #0
    /* Loop forever */
	printf(" Learning ARM M4 \n");
 8000180:	4802      	ldr	r0, [pc, #8]	; (800018c <main+0x10>)
 8000182:	f000 f9f9 	bl	8000578 <puts>
 8000186:	2300      	movs	r3, #0
	//for(;;);
}
 8000188:	4618      	mov	r0, r3
 800018a:	bd80      	pop	{r7, pc}
 800018c:	08000cbc 	.word	0x08000cbc

08000190 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000190:	b580      	push	{r7, lr}
 8000192:	b086      	sub	sp, #24
 8000194:	af00      	add	r7, sp, #0
 8000196:	60f8      	str	r0, [r7, #12]
 8000198:	60b9      	str	r1, [r7, #8]
 800019a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800019c:	2300      	movs	r3, #0
 800019e:	617b      	str	r3, [r7, #20]
 80001a0:	e00a      	b.n	80001b8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80001a2:	f3af 8000 	nop.w
 80001a6:	4601      	mov	r1, r0
 80001a8:	68bb      	ldr	r3, [r7, #8]
 80001aa:	1c5a      	adds	r2, r3, #1
 80001ac:	60ba      	str	r2, [r7, #8]
 80001ae:	b2ca      	uxtb	r2, r1
 80001b0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001b2:	697b      	ldr	r3, [r7, #20]
 80001b4:	3301      	adds	r3, #1
 80001b6:	617b      	str	r3, [r7, #20]
 80001b8:	697a      	ldr	r2, [r7, #20]
 80001ba:	687b      	ldr	r3, [r7, #4]
 80001bc:	429a      	cmp	r2, r3
 80001be:	dbf0      	blt.n	80001a2 <_read+0x12>
  }

  return len;
 80001c0:	687b      	ldr	r3, [r7, #4]
}
 80001c2:	4618      	mov	r0, r3
 80001c4:	3718      	adds	r7, #24
 80001c6:	46bd      	mov	sp, r7
 80001c8:	bd80      	pop	{r7, pc}

080001ca <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001ca:	b580      	push	{r7, lr}
 80001cc:	b086      	sub	sp, #24
 80001ce:	af00      	add	r7, sp, #0
 80001d0:	60f8      	str	r0, [r7, #12]
 80001d2:	60b9      	str	r1, [r7, #8]
 80001d4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001d6:	2300      	movs	r3, #0
 80001d8:	617b      	str	r3, [r7, #20]
 80001da:	e009      	b.n	80001f0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80001dc:	68bb      	ldr	r3, [r7, #8]
 80001de:	1c5a      	adds	r2, r3, #1
 80001e0:	60ba      	str	r2, [r7, #8]
 80001e2:	781b      	ldrb	r3, [r3, #0]
 80001e4:	4618      	mov	r0, r3
 80001e6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001ea:	697b      	ldr	r3, [r7, #20]
 80001ec:	3301      	adds	r3, #1
 80001ee:	617b      	str	r3, [r7, #20]
 80001f0:	697a      	ldr	r2, [r7, #20]
 80001f2:	687b      	ldr	r3, [r7, #4]
 80001f4:	429a      	cmp	r2, r3
 80001f6:	dbf1      	blt.n	80001dc <_write+0x12>
  }
  return len;
 80001f8:	687b      	ldr	r3, [r7, #4]
}
 80001fa:	4618      	mov	r0, r3
 80001fc:	3718      	adds	r7, #24
 80001fe:	46bd      	mov	sp, r7
 8000200:	bd80      	pop	{r7, pc}

08000202 <_close>:

int _close(int file)
{
 8000202:	b480      	push	{r7}
 8000204:	b083      	sub	sp, #12
 8000206:	af00      	add	r7, sp, #0
 8000208:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800020a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800020e:	4618      	mov	r0, r3
 8000210:	370c      	adds	r7, #12
 8000212:	46bd      	mov	sp, r7
 8000214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000218:	4770      	bx	lr

0800021a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800021a:	b480      	push	{r7}
 800021c:	b083      	sub	sp, #12
 800021e:	af00      	add	r7, sp, #0
 8000220:	6078      	str	r0, [r7, #4]
 8000222:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000224:	683b      	ldr	r3, [r7, #0]
 8000226:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800022a:	605a      	str	r2, [r3, #4]
  return 0;
 800022c:	2300      	movs	r3, #0
}
 800022e:	4618      	mov	r0, r3
 8000230:	370c      	adds	r7, #12
 8000232:	46bd      	mov	sp, r7
 8000234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000238:	4770      	bx	lr

0800023a <_isatty>:

int _isatty(int file)
{
 800023a:	b480      	push	{r7}
 800023c:	b083      	sub	sp, #12
 800023e:	af00      	add	r7, sp, #0
 8000240:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000242:	2301      	movs	r3, #1
}
 8000244:	4618      	mov	r0, r3
 8000246:	370c      	adds	r7, #12
 8000248:	46bd      	mov	sp, r7
 800024a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800024e:	4770      	bx	lr

08000250 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000250:	b480      	push	{r7}
 8000252:	b085      	sub	sp, #20
 8000254:	af00      	add	r7, sp, #0
 8000256:	60f8      	str	r0, [r7, #12]
 8000258:	60b9      	str	r1, [r7, #8]
 800025a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800025c:	2300      	movs	r3, #0
}
 800025e:	4618      	mov	r0, r3
 8000260:	3714      	adds	r7, #20
 8000262:	46bd      	mov	sp, r7
 8000264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000268:	4770      	bx	lr
	...

0800026c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b086      	sub	sp, #24
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000274:	4a14      	ldr	r2, [pc, #80]	; (80002c8 <_sbrk+0x5c>)
 8000276:	4b15      	ldr	r3, [pc, #84]	; (80002cc <_sbrk+0x60>)
 8000278:	1ad3      	subs	r3, r2, r3
 800027a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800027c:	697b      	ldr	r3, [r7, #20]
 800027e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000280:	4b13      	ldr	r3, [pc, #76]	; (80002d0 <_sbrk+0x64>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	2b00      	cmp	r3, #0
 8000286:	d102      	bne.n	800028e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000288:	4b11      	ldr	r3, [pc, #68]	; (80002d0 <_sbrk+0x64>)
 800028a:	4a12      	ldr	r2, [pc, #72]	; (80002d4 <_sbrk+0x68>)
 800028c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800028e:	4b10      	ldr	r3, [pc, #64]	; (80002d0 <_sbrk+0x64>)
 8000290:	681a      	ldr	r2, [r3, #0]
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	4413      	add	r3, r2
 8000296:	693a      	ldr	r2, [r7, #16]
 8000298:	429a      	cmp	r2, r3
 800029a:	d207      	bcs.n	80002ac <_sbrk+0x40>
  {
    errno = ENOMEM;
 800029c:	f000 fa9a 	bl	80007d4 <__errno>
 80002a0:	4603      	mov	r3, r0
 80002a2:	220c      	movs	r2, #12
 80002a4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002a6:	f04f 33ff 	mov.w	r3, #4294967295
 80002aa:	e009      	b.n	80002c0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002ac:	4b08      	ldr	r3, [pc, #32]	; (80002d0 <_sbrk+0x64>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002b2:	4b07      	ldr	r3, [pc, #28]	; (80002d0 <_sbrk+0x64>)
 80002b4:	681a      	ldr	r2, [r3, #0]
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4413      	add	r3, r2
 80002ba:	4a05      	ldr	r2, [pc, #20]	; (80002d0 <_sbrk+0x64>)
 80002bc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002be:	68fb      	ldr	r3, [r7, #12]
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	3718      	adds	r7, #24
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bd80      	pop	{r7, pc}
 80002c8:	20030000 	.word	0x20030000
 80002cc:	00001000 	.word	0x00001000
 80002d0:	20000080 	.word	0x20000080
 80002d4:	200001d0 	.word	0x200001d0

080002d8 <CopyDataInit>:
  bl LoopCopyDataInit
.endm

.section  .text.data_initializers
CopyDataInit:
  ldr r4, [r2, r3]
 80002d8:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002da:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002dc:	3304      	adds	r3, #4

080002de <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002de:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002e0:	428c      	cmp	r4, r1
  bcc  CopyDataInit
 80002e2:	d3f9      	bcc.n	80002d8 <CopyDataInit>
  bx lr
 80002e4:	4770      	bx	lr

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r0]
 80002e6:	6003      	str	r3, [r0, #0]
  adds r0, r0, #4
 80002e8:	3004      	adds	r0, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r0, r1
 80002ea:	4288      	cmp	r0, r1
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>
  bx lr
 80002ee:	4770      	bx	lr

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480c      	ldr	r0, [pc, #48]	; (8000324 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  INIT_DATA _sdata, _edata, _sidata
 80002f8:	480b      	ldr	r0, [pc, #44]	; (8000328 <LoopForever+0x6>)
 80002fa:	490c      	ldr	r1, [pc, #48]	; (800032c <LoopForever+0xa>)
 80002fc:	4a0c      	ldr	r2, [pc, #48]	; (8000330 <LoopForever+0xe>)
 80002fe:	2300      	movs	r3, #0
 8000300:	f7ff ffed 	bl	80002de <LoopCopyDataInit>
  INIT_DATA _sMB_MEM2, _eMB_MEM2, _siMB_MEM2
 8000304:	480b      	ldr	r0, [pc, #44]	; (8000334 <LoopForever+0x12>)
 8000306:	490c      	ldr	r1, [pc, #48]	; (8000338 <LoopForever+0x16>)
 8000308:	4a0c      	ldr	r2, [pc, #48]	; (800033c <LoopForever+0x1a>)
 800030a:	2300      	movs	r3, #0
 800030c:	f7ff ffe7 	bl	80002de <LoopCopyDataInit>

/* Zero fill the bss segments. */
  INIT_BSS _sbss, _ebss
 8000310:	480b      	ldr	r0, [pc, #44]	; (8000340 <LoopForever+0x1e>)
 8000312:	490c      	ldr	r1, [pc, #48]	; (8000344 <LoopForever+0x22>)
 8000314:	2300      	movs	r3, #0
 8000316:	f7ff ffe8 	bl	80002ea <LoopFillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031a:	f000 fa61 	bl	80007e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800031e:	f7ff ff2d 	bl	800017c <main>

08000322 <LoopForever>:

LoopForever:
  b LoopForever
 8000322:	e7fe      	b.n	8000322 <LoopForever>
  ldr   r0, =_estack
 8000324:	20030000 	.word	0x20030000
  INIT_DATA _sdata, _edata, _sidata
 8000328:	20000008 	.word	0x20000008
 800032c:	20000064 	.word	0x20000064
 8000330:	08000cd8 	.word	0x08000cd8
  INIT_DATA _sMB_MEM2, _eMB_MEM2, _siMB_MEM2
 8000334:	20030000 	.word	0x20030000
 8000338:	20030000 	.word	0x20030000
 800033c:	08000d34 	.word	0x08000d34
  INIT_BSS _sbss, _ebss
 8000340:	20000064 	.word	0x20000064
 8000344:	200001d0 	.word	0x200001d0

08000348 <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000348:	e7fe      	b.n	8000348 <ADC1_IRQHandler>
	...

0800034c <std>:
 800034c:	2300      	movs	r3, #0
 800034e:	b510      	push	{r4, lr}
 8000350:	4604      	mov	r4, r0
 8000352:	e9c0 3300 	strd	r3, r3, [r0]
 8000356:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800035a:	6083      	str	r3, [r0, #8]
 800035c:	8181      	strh	r1, [r0, #12]
 800035e:	6643      	str	r3, [r0, #100]	; 0x64
 8000360:	81c2      	strh	r2, [r0, #14]
 8000362:	6183      	str	r3, [r0, #24]
 8000364:	4619      	mov	r1, r3
 8000366:	2208      	movs	r2, #8
 8000368:	305c      	adds	r0, #92	; 0x5c
 800036a:	f000 f9e5 	bl	8000738 <memset>
 800036e:	4b0d      	ldr	r3, [pc, #52]	; (80003a4 <std+0x58>)
 8000370:	6263      	str	r3, [r4, #36]	; 0x24
 8000372:	4b0d      	ldr	r3, [pc, #52]	; (80003a8 <std+0x5c>)
 8000374:	62a3      	str	r3, [r4, #40]	; 0x28
 8000376:	4b0d      	ldr	r3, [pc, #52]	; (80003ac <std+0x60>)
 8000378:	62e3      	str	r3, [r4, #44]	; 0x2c
 800037a:	4b0d      	ldr	r3, [pc, #52]	; (80003b0 <std+0x64>)
 800037c:	6323      	str	r3, [r4, #48]	; 0x30
 800037e:	4b0d      	ldr	r3, [pc, #52]	; (80003b4 <std+0x68>)
 8000380:	6224      	str	r4, [r4, #32]
 8000382:	429c      	cmp	r4, r3
 8000384:	d006      	beq.n	8000394 <std+0x48>
 8000386:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800038a:	4294      	cmp	r4, r2
 800038c:	d002      	beq.n	8000394 <std+0x48>
 800038e:	33d0      	adds	r3, #208	; 0xd0
 8000390:	429c      	cmp	r4, r3
 8000392:	d105      	bne.n	80003a0 <std+0x54>
 8000394:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000398:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800039c:	f000 ba44 	b.w	8000828 <__retarget_lock_init_recursive>
 80003a0:	bd10      	pop	{r4, pc}
 80003a2:	bf00      	nop
 80003a4:	08000589 	.word	0x08000589
 80003a8:	080005ab 	.word	0x080005ab
 80003ac:	080005e3 	.word	0x080005e3
 80003b0:	08000607 	.word	0x08000607
 80003b4:	20000084 	.word	0x20000084

080003b8 <stdio_exit_handler>:
 80003b8:	4a02      	ldr	r2, [pc, #8]	; (80003c4 <stdio_exit_handler+0xc>)
 80003ba:	4903      	ldr	r1, [pc, #12]	; (80003c8 <stdio_exit_handler+0x10>)
 80003bc:	4803      	ldr	r0, [pc, #12]	; (80003cc <stdio_exit_handler+0x14>)
 80003be:	f000 b869 	b.w	8000494 <_fwalk_sglue>
 80003c2:	bf00      	nop
 80003c4:	20000008 	.word	0x20000008
 80003c8:	08000b2d 	.word	0x08000b2d
 80003cc:	20000014 	.word	0x20000014

080003d0 <cleanup_stdio>:
 80003d0:	6841      	ldr	r1, [r0, #4]
 80003d2:	4b0c      	ldr	r3, [pc, #48]	; (8000404 <cleanup_stdio+0x34>)
 80003d4:	4299      	cmp	r1, r3
 80003d6:	b510      	push	{r4, lr}
 80003d8:	4604      	mov	r4, r0
 80003da:	d001      	beq.n	80003e0 <cleanup_stdio+0x10>
 80003dc:	f000 fba6 	bl	8000b2c <_fflush_r>
 80003e0:	68a1      	ldr	r1, [r4, #8]
 80003e2:	4b09      	ldr	r3, [pc, #36]	; (8000408 <cleanup_stdio+0x38>)
 80003e4:	4299      	cmp	r1, r3
 80003e6:	d002      	beq.n	80003ee <cleanup_stdio+0x1e>
 80003e8:	4620      	mov	r0, r4
 80003ea:	f000 fb9f 	bl	8000b2c <_fflush_r>
 80003ee:	68e1      	ldr	r1, [r4, #12]
 80003f0:	4b06      	ldr	r3, [pc, #24]	; (800040c <cleanup_stdio+0x3c>)
 80003f2:	4299      	cmp	r1, r3
 80003f4:	d004      	beq.n	8000400 <cleanup_stdio+0x30>
 80003f6:	4620      	mov	r0, r4
 80003f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003fc:	f000 bb96 	b.w	8000b2c <_fflush_r>
 8000400:	bd10      	pop	{r4, pc}
 8000402:	bf00      	nop
 8000404:	20000084 	.word	0x20000084
 8000408:	200000ec 	.word	0x200000ec
 800040c:	20000154 	.word	0x20000154

08000410 <global_stdio_init.part.0>:
 8000410:	b510      	push	{r4, lr}
 8000412:	4b0b      	ldr	r3, [pc, #44]	; (8000440 <global_stdio_init.part.0+0x30>)
 8000414:	4c0b      	ldr	r4, [pc, #44]	; (8000444 <global_stdio_init.part.0+0x34>)
 8000416:	4a0c      	ldr	r2, [pc, #48]	; (8000448 <global_stdio_init.part.0+0x38>)
 8000418:	601a      	str	r2, [r3, #0]
 800041a:	4620      	mov	r0, r4
 800041c:	2200      	movs	r2, #0
 800041e:	2104      	movs	r1, #4
 8000420:	f7ff ff94 	bl	800034c <std>
 8000424:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000428:	2201      	movs	r2, #1
 800042a:	2109      	movs	r1, #9
 800042c:	f7ff ff8e 	bl	800034c <std>
 8000430:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000434:	2202      	movs	r2, #2
 8000436:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800043a:	2112      	movs	r1, #18
 800043c:	f7ff bf86 	b.w	800034c <std>
 8000440:	200001bc 	.word	0x200001bc
 8000444:	20000084 	.word	0x20000084
 8000448:	080003b9 	.word	0x080003b9

0800044c <__sfp_lock_acquire>:
 800044c:	4801      	ldr	r0, [pc, #4]	; (8000454 <__sfp_lock_acquire+0x8>)
 800044e:	f000 b9ec 	b.w	800082a <__retarget_lock_acquire_recursive>
 8000452:	bf00      	nop
 8000454:	200001c5 	.word	0x200001c5

08000458 <__sfp_lock_release>:
 8000458:	4801      	ldr	r0, [pc, #4]	; (8000460 <__sfp_lock_release+0x8>)
 800045a:	f000 b9e7 	b.w	800082c <__retarget_lock_release_recursive>
 800045e:	bf00      	nop
 8000460:	200001c5 	.word	0x200001c5

08000464 <__sinit>:
 8000464:	b510      	push	{r4, lr}
 8000466:	4604      	mov	r4, r0
 8000468:	f7ff fff0 	bl	800044c <__sfp_lock_acquire>
 800046c:	6a23      	ldr	r3, [r4, #32]
 800046e:	b11b      	cbz	r3, 8000478 <__sinit+0x14>
 8000470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000474:	f7ff bff0 	b.w	8000458 <__sfp_lock_release>
 8000478:	4b04      	ldr	r3, [pc, #16]	; (800048c <__sinit+0x28>)
 800047a:	6223      	str	r3, [r4, #32]
 800047c:	4b04      	ldr	r3, [pc, #16]	; (8000490 <__sinit+0x2c>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	2b00      	cmp	r3, #0
 8000482:	d1f5      	bne.n	8000470 <__sinit+0xc>
 8000484:	f7ff ffc4 	bl	8000410 <global_stdio_init.part.0>
 8000488:	e7f2      	b.n	8000470 <__sinit+0xc>
 800048a:	bf00      	nop
 800048c:	080003d1 	.word	0x080003d1
 8000490:	200001bc 	.word	0x200001bc

08000494 <_fwalk_sglue>:
 8000494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000498:	4607      	mov	r7, r0
 800049a:	4688      	mov	r8, r1
 800049c:	4614      	mov	r4, r2
 800049e:	2600      	movs	r6, #0
 80004a0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80004a4:	f1b9 0901 	subs.w	r9, r9, #1
 80004a8:	d505      	bpl.n	80004b6 <_fwalk_sglue+0x22>
 80004aa:	6824      	ldr	r4, [r4, #0]
 80004ac:	2c00      	cmp	r4, #0
 80004ae:	d1f7      	bne.n	80004a0 <_fwalk_sglue+0xc>
 80004b0:	4630      	mov	r0, r6
 80004b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80004b6:	89ab      	ldrh	r3, [r5, #12]
 80004b8:	2b01      	cmp	r3, #1
 80004ba:	d907      	bls.n	80004cc <_fwalk_sglue+0x38>
 80004bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80004c0:	3301      	adds	r3, #1
 80004c2:	d003      	beq.n	80004cc <_fwalk_sglue+0x38>
 80004c4:	4629      	mov	r1, r5
 80004c6:	4638      	mov	r0, r7
 80004c8:	47c0      	blx	r8
 80004ca:	4306      	orrs	r6, r0
 80004cc:	3568      	adds	r5, #104	; 0x68
 80004ce:	e7e9      	b.n	80004a4 <_fwalk_sglue+0x10>

080004d0 <_puts_r>:
 80004d0:	6a03      	ldr	r3, [r0, #32]
 80004d2:	b570      	push	{r4, r5, r6, lr}
 80004d4:	6884      	ldr	r4, [r0, #8]
 80004d6:	4605      	mov	r5, r0
 80004d8:	460e      	mov	r6, r1
 80004da:	b90b      	cbnz	r3, 80004e0 <_puts_r+0x10>
 80004dc:	f7ff ffc2 	bl	8000464 <__sinit>
 80004e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004e2:	07db      	lsls	r3, r3, #31
 80004e4:	d405      	bmi.n	80004f2 <_puts_r+0x22>
 80004e6:	89a3      	ldrh	r3, [r4, #12]
 80004e8:	0598      	lsls	r0, r3, #22
 80004ea:	d402      	bmi.n	80004f2 <_puts_r+0x22>
 80004ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004ee:	f000 f99c 	bl	800082a <__retarget_lock_acquire_recursive>
 80004f2:	89a3      	ldrh	r3, [r4, #12]
 80004f4:	0719      	lsls	r1, r3, #28
 80004f6:	d513      	bpl.n	8000520 <_puts_r+0x50>
 80004f8:	6923      	ldr	r3, [r4, #16]
 80004fa:	b18b      	cbz	r3, 8000520 <_puts_r+0x50>
 80004fc:	3e01      	subs	r6, #1
 80004fe:	68a3      	ldr	r3, [r4, #8]
 8000500:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000504:	3b01      	subs	r3, #1
 8000506:	60a3      	str	r3, [r4, #8]
 8000508:	b9e9      	cbnz	r1, 8000546 <_puts_r+0x76>
 800050a:	2b00      	cmp	r3, #0
 800050c:	da2e      	bge.n	800056c <_puts_r+0x9c>
 800050e:	4622      	mov	r2, r4
 8000510:	210a      	movs	r1, #10
 8000512:	4628      	mov	r0, r5
 8000514:	f000 f87b 	bl	800060e <__swbuf_r>
 8000518:	3001      	adds	r0, #1
 800051a:	d007      	beq.n	800052c <_puts_r+0x5c>
 800051c:	250a      	movs	r5, #10
 800051e:	e007      	b.n	8000530 <_puts_r+0x60>
 8000520:	4621      	mov	r1, r4
 8000522:	4628      	mov	r0, r5
 8000524:	f000 f8b0 	bl	8000688 <__swsetup_r>
 8000528:	2800      	cmp	r0, #0
 800052a:	d0e7      	beq.n	80004fc <_puts_r+0x2c>
 800052c:	f04f 35ff 	mov.w	r5, #4294967295
 8000530:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000532:	07da      	lsls	r2, r3, #31
 8000534:	d405      	bmi.n	8000542 <_puts_r+0x72>
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	059b      	lsls	r3, r3, #22
 800053a:	d402      	bmi.n	8000542 <_puts_r+0x72>
 800053c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800053e:	f000 f975 	bl	800082c <__retarget_lock_release_recursive>
 8000542:	4628      	mov	r0, r5
 8000544:	bd70      	pop	{r4, r5, r6, pc}
 8000546:	2b00      	cmp	r3, #0
 8000548:	da04      	bge.n	8000554 <_puts_r+0x84>
 800054a:	69a2      	ldr	r2, [r4, #24]
 800054c:	429a      	cmp	r2, r3
 800054e:	dc06      	bgt.n	800055e <_puts_r+0x8e>
 8000550:	290a      	cmp	r1, #10
 8000552:	d004      	beq.n	800055e <_puts_r+0x8e>
 8000554:	6823      	ldr	r3, [r4, #0]
 8000556:	1c5a      	adds	r2, r3, #1
 8000558:	6022      	str	r2, [r4, #0]
 800055a:	7019      	strb	r1, [r3, #0]
 800055c:	e7cf      	b.n	80004fe <_puts_r+0x2e>
 800055e:	4622      	mov	r2, r4
 8000560:	4628      	mov	r0, r5
 8000562:	f000 f854 	bl	800060e <__swbuf_r>
 8000566:	3001      	adds	r0, #1
 8000568:	d1c9      	bne.n	80004fe <_puts_r+0x2e>
 800056a:	e7df      	b.n	800052c <_puts_r+0x5c>
 800056c:	6823      	ldr	r3, [r4, #0]
 800056e:	250a      	movs	r5, #10
 8000570:	1c5a      	adds	r2, r3, #1
 8000572:	6022      	str	r2, [r4, #0]
 8000574:	701d      	strb	r5, [r3, #0]
 8000576:	e7db      	b.n	8000530 <_puts_r+0x60>

08000578 <puts>:
 8000578:	4b02      	ldr	r3, [pc, #8]	; (8000584 <puts+0xc>)
 800057a:	4601      	mov	r1, r0
 800057c:	6818      	ldr	r0, [r3, #0]
 800057e:	f7ff bfa7 	b.w	80004d0 <_puts_r>
 8000582:	bf00      	nop
 8000584:	20000060 	.word	0x20000060

08000588 <__sread>:
 8000588:	b510      	push	{r4, lr}
 800058a:	460c      	mov	r4, r1
 800058c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000590:	f000 f8fc 	bl	800078c <_read_r>
 8000594:	2800      	cmp	r0, #0
 8000596:	bfab      	itete	ge
 8000598:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800059a:	89a3      	ldrhlt	r3, [r4, #12]
 800059c:	181b      	addge	r3, r3, r0
 800059e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80005a2:	bfac      	ite	ge
 80005a4:	6563      	strge	r3, [r4, #84]	; 0x54
 80005a6:	81a3      	strhlt	r3, [r4, #12]
 80005a8:	bd10      	pop	{r4, pc}

080005aa <__swrite>:
 80005aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80005ae:	461f      	mov	r7, r3
 80005b0:	898b      	ldrh	r3, [r1, #12]
 80005b2:	05db      	lsls	r3, r3, #23
 80005b4:	4605      	mov	r5, r0
 80005b6:	460c      	mov	r4, r1
 80005b8:	4616      	mov	r6, r2
 80005ba:	d505      	bpl.n	80005c8 <__swrite+0x1e>
 80005bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005c0:	2302      	movs	r3, #2
 80005c2:	2200      	movs	r2, #0
 80005c4:	f000 f8d0 	bl	8000768 <_lseek_r>
 80005c8:	89a3      	ldrh	r3, [r4, #12]
 80005ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80005ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80005d2:	81a3      	strh	r3, [r4, #12]
 80005d4:	4632      	mov	r2, r6
 80005d6:	463b      	mov	r3, r7
 80005d8:	4628      	mov	r0, r5
 80005da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005de:	f000 b8e7 	b.w	80007b0 <_write_r>

080005e2 <__sseek>:
 80005e2:	b510      	push	{r4, lr}
 80005e4:	460c      	mov	r4, r1
 80005e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005ea:	f000 f8bd 	bl	8000768 <_lseek_r>
 80005ee:	1c43      	adds	r3, r0, #1
 80005f0:	89a3      	ldrh	r3, [r4, #12]
 80005f2:	bf15      	itete	ne
 80005f4:	6560      	strne	r0, [r4, #84]	; 0x54
 80005f6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80005fa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80005fe:	81a3      	strheq	r3, [r4, #12]
 8000600:	bf18      	it	ne
 8000602:	81a3      	strhne	r3, [r4, #12]
 8000604:	bd10      	pop	{r4, pc}

08000606 <__sclose>:
 8000606:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800060a:	f000 b89d 	b.w	8000748 <_close_r>

0800060e <__swbuf_r>:
 800060e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000610:	460e      	mov	r6, r1
 8000612:	4614      	mov	r4, r2
 8000614:	4605      	mov	r5, r0
 8000616:	b118      	cbz	r0, 8000620 <__swbuf_r+0x12>
 8000618:	6a03      	ldr	r3, [r0, #32]
 800061a:	b90b      	cbnz	r3, 8000620 <__swbuf_r+0x12>
 800061c:	f7ff ff22 	bl	8000464 <__sinit>
 8000620:	69a3      	ldr	r3, [r4, #24]
 8000622:	60a3      	str	r3, [r4, #8]
 8000624:	89a3      	ldrh	r3, [r4, #12]
 8000626:	071a      	lsls	r2, r3, #28
 8000628:	d525      	bpl.n	8000676 <__swbuf_r+0x68>
 800062a:	6923      	ldr	r3, [r4, #16]
 800062c:	b31b      	cbz	r3, 8000676 <__swbuf_r+0x68>
 800062e:	6823      	ldr	r3, [r4, #0]
 8000630:	6922      	ldr	r2, [r4, #16]
 8000632:	1a98      	subs	r0, r3, r2
 8000634:	6963      	ldr	r3, [r4, #20]
 8000636:	b2f6      	uxtb	r6, r6
 8000638:	4283      	cmp	r3, r0
 800063a:	4637      	mov	r7, r6
 800063c:	dc04      	bgt.n	8000648 <__swbuf_r+0x3a>
 800063e:	4621      	mov	r1, r4
 8000640:	4628      	mov	r0, r5
 8000642:	f000 fa73 	bl	8000b2c <_fflush_r>
 8000646:	b9e0      	cbnz	r0, 8000682 <__swbuf_r+0x74>
 8000648:	68a3      	ldr	r3, [r4, #8]
 800064a:	3b01      	subs	r3, #1
 800064c:	60a3      	str	r3, [r4, #8]
 800064e:	6823      	ldr	r3, [r4, #0]
 8000650:	1c5a      	adds	r2, r3, #1
 8000652:	6022      	str	r2, [r4, #0]
 8000654:	701e      	strb	r6, [r3, #0]
 8000656:	6962      	ldr	r2, [r4, #20]
 8000658:	1c43      	adds	r3, r0, #1
 800065a:	429a      	cmp	r2, r3
 800065c:	d004      	beq.n	8000668 <__swbuf_r+0x5a>
 800065e:	89a3      	ldrh	r3, [r4, #12]
 8000660:	07db      	lsls	r3, r3, #31
 8000662:	d506      	bpl.n	8000672 <__swbuf_r+0x64>
 8000664:	2e0a      	cmp	r6, #10
 8000666:	d104      	bne.n	8000672 <__swbuf_r+0x64>
 8000668:	4621      	mov	r1, r4
 800066a:	4628      	mov	r0, r5
 800066c:	f000 fa5e 	bl	8000b2c <_fflush_r>
 8000670:	b938      	cbnz	r0, 8000682 <__swbuf_r+0x74>
 8000672:	4638      	mov	r0, r7
 8000674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000676:	4621      	mov	r1, r4
 8000678:	4628      	mov	r0, r5
 800067a:	f000 f805 	bl	8000688 <__swsetup_r>
 800067e:	2800      	cmp	r0, #0
 8000680:	d0d5      	beq.n	800062e <__swbuf_r+0x20>
 8000682:	f04f 37ff 	mov.w	r7, #4294967295
 8000686:	e7f4      	b.n	8000672 <__swbuf_r+0x64>

08000688 <__swsetup_r>:
 8000688:	b538      	push	{r3, r4, r5, lr}
 800068a:	4b2a      	ldr	r3, [pc, #168]	; (8000734 <__swsetup_r+0xac>)
 800068c:	4605      	mov	r5, r0
 800068e:	6818      	ldr	r0, [r3, #0]
 8000690:	460c      	mov	r4, r1
 8000692:	b118      	cbz	r0, 800069c <__swsetup_r+0x14>
 8000694:	6a03      	ldr	r3, [r0, #32]
 8000696:	b90b      	cbnz	r3, 800069c <__swsetup_r+0x14>
 8000698:	f7ff fee4 	bl	8000464 <__sinit>
 800069c:	89a3      	ldrh	r3, [r4, #12]
 800069e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006a2:	0718      	lsls	r0, r3, #28
 80006a4:	d422      	bmi.n	80006ec <__swsetup_r+0x64>
 80006a6:	06d9      	lsls	r1, r3, #27
 80006a8:	d407      	bmi.n	80006ba <__swsetup_r+0x32>
 80006aa:	2309      	movs	r3, #9
 80006ac:	602b      	str	r3, [r5, #0]
 80006ae:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006b2:	81a3      	strh	r3, [r4, #12]
 80006b4:	f04f 30ff 	mov.w	r0, #4294967295
 80006b8:	e034      	b.n	8000724 <__swsetup_r+0x9c>
 80006ba:	0758      	lsls	r0, r3, #29
 80006bc:	d512      	bpl.n	80006e4 <__swsetup_r+0x5c>
 80006be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006c0:	b141      	cbz	r1, 80006d4 <__swsetup_r+0x4c>
 80006c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006c6:	4299      	cmp	r1, r3
 80006c8:	d002      	beq.n	80006d0 <__swsetup_r+0x48>
 80006ca:	4628      	mov	r0, r5
 80006cc:	f000 f8b0 	bl	8000830 <_free_r>
 80006d0:	2300      	movs	r3, #0
 80006d2:	6363      	str	r3, [r4, #52]	; 0x34
 80006d4:	89a3      	ldrh	r3, [r4, #12]
 80006d6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006da:	81a3      	strh	r3, [r4, #12]
 80006dc:	2300      	movs	r3, #0
 80006de:	6063      	str	r3, [r4, #4]
 80006e0:	6923      	ldr	r3, [r4, #16]
 80006e2:	6023      	str	r3, [r4, #0]
 80006e4:	89a3      	ldrh	r3, [r4, #12]
 80006e6:	f043 0308 	orr.w	r3, r3, #8
 80006ea:	81a3      	strh	r3, [r4, #12]
 80006ec:	6923      	ldr	r3, [r4, #16]
 80006ee:	b94b      	cbnz	r3, 8000704 <__swsetup_r+0x7c>
 80006f0:	89a3      	ldrh	r3, [r4, #12]
 80006f2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006fa:	d003      	beq.n	8000704 <__swsetup_r+0x7c>
 80006fc:	4621      	mov	r1, r4
 80006fe:	4628      	mov	r0, r5
 8000700:	f000 fa62 	bl	8000bc8 <__smakebuf_r>
 8000704:	89a0      	ldrh	r0, [r4, #12]
 8000706:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800070a:	f010 0301 	ands.w	r3, r0, #1
 800070e:	d00a      	beq.n	8000726 <__swsetup_r+0x9e>
 8000710:	2300      	movs	r3, #0
 8000712:	60a3      	str	r3, [r4, #8]
 8000714:	6963      	ldr	r3, [r4, #20]
 8000716:	425b      	negs	r3, r3
 8000718:	61a3      	str	r3, [r4, #24]
 800071a:	6923      	ldr	r3, [r4, #16]
 800071c:	b943      	cbnz	r3, 8000730 <__swsetup_r+0xa8>
 800071e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000722:	d1c4      	bne.n	80006ae <__swsetup_r+0x26>
 8000724:	bd38      	pop	{r3, r4, r5, pc}
 8000726:	0781      	lsls	r1, r0, #30
 8000728:	bf58      	it	pl
 800072a:	6963      	ldrpl	r3, [r4, #20]
 800072c:	60a3      	str	r3, [r4, #8]
 800072e:	e7f4      	b.n	800071a <__swsetup_r+0x92>
 8000730:	2000      	movs	r0, #0
 8000732:	e7f7      	b.n	8000724 <__swsetup_r+0x9c>
 8000734:	20000060 	.word	0x20000060

08000738 <memset>:
 8000738:	4402      	add	r2, r0
 800073a:	4603      	mov	r3, r0
 800073c:	4293      	cmp	r3, r2
 800073e:	d100      	bne.n	8000742 <memset+0xa>
 8000740:	4770      	bx	lr
 8000742:	f803 1b01 	strb.w	r1, [r3], #1
 8000746:	e7f9      	b.n	800073c <memset+0x4>

08000748 <_close_r>:
 8000748:	b538      	push	{r3, r4, r5, lr}
 800074a:	4d06      	ldr	r5, [pc, #24]	; (8000764 <_close_r+0x1c>)
 800074c:	2300      	movs	r3, #0
 800074e:	4604      	mov	r4, r0
 8000750:	4608      	mov	r0, r1
 8000752:	602b      	str	r3, [r5, #0]
 8000754:	f7ff fd55 	bl	8000202 <_close>
 8000758:	1c43      	adds	r3, r0, #1
 800075a:	d102      	bne.n	8000762 <_close_r+0x1a>
 800075c:	682b      	ldr	r3, [r5, #0]
 800075e:	b103      	cbz	r3, 8000762 <_close_r+0x1a>
 8000760:	6023      	str	r3, [r4, #0]
 8000762:	bd38      	pop	{r3, r4, r5, pc}
 8000764:	200001c0 	.word	0x200001c0

08000768 <_lseek_r>:
 8000768:	b538      	push	{r3, r4, r5, lr}
 800076a:	4d07      	ldr	r5, [pc, #28]	; (8000788 <_lseek_r+0x20>)
 800076c:	4604      	mov	r4, r0
 800076e:	4608      	mov	r0, r1
 8000770:	4611      	mov	r1, r2
 8000772:	2200      	movs	r2, #0
 8000774:	602a      	str	r2, [r5, #0]
 8000776:	461a      	mov	r2, r3
 8000778:	f7ff fd6a 	bl	8000250 <_lseek>
 800077c:	1c43      	adds	r3, r0, #1
 800077e:	d102      	bne.n	8000786 <_lseek_r+0x1e>
 8000780:	682b      	ldr	r3, [r5, #0]
 8000782:	b103      	cbz	r3, 8000786 <_lseek_r+0x1e>
 8000784:	6023      	str	r3, [r4, #0]
 8000786:	bd38      	pop	{r3, r4, r5, pc}
 8000788:	200001c0 	.word	0x200001c0

0800078c <_read_r>:
 800078c:	b538      	push	{r3, r4, r5, lr}
 800078e:	4d07      	ldr	r5, [pc, #28]	; (80007ac <_read_r+0x20>)
 8000790:	4604      	mov	r4, r0
 8000792:	4608      	mov	r0, r1
 8000794:	4611      	mov	r1, r2
 8000796:	2200      	movs	r2, #0
 8000798:	602a      	str	r2, [r5, #0]
 800079a:	461a      	mov	r2, r3
 800079c:	f7ff fcf8 	bl	8000190 <_read>
 80007a0:	1c43      	adds	r3, r0, #1
 80007a2:	d102      	bne.n	80007aa <_read_r+0x1e>
 80007a4:	682b      	ldr	r3, [r5, #0]
 80007a6:	b103      	cbz	r3, 80007aa <_read_r+0x1e>
 80007a8:	6023      	str	r3, [r4, #0]
 80007aa:	bd38      	pop	{r3, r4, r5, pc}
 80007ac:	200001c0 	.word	0x200001c0

080007b0 <_write_r>:
 80007b0:	b538      	push	{r3, r4, r5, lr}
 80007b2:	4d07      	ldr	r5, [pc, #28]	; (80007d0 <_write_r+0x20>)
 80007b4:	4604      	mov	r4, r0
 80007b6:	4608      	mov	r0, r1
 80007b8:	4611      	mov	r1, r2
 80007ba:	2200      	movs	r2, #0
 80007bc:	602a      	str	r2, [r5, #0]
 80007be:	461a      	mov	r2, r3
 80007c0:	f7ff fd03 	bl	80001ca <_write>
 80007c4:	1c43      	adds	r3, r0, #1
 80007c6:	d102      	bne.n	80007ce <_write_r+0x1e>
 80007c8:	682b      	ldr	r3, [r5, #0]
 80007ca:	b103      	cbz	r3, 80007ce <_write_r+0x1e>
 80007cc:	6023      	str	r3, [r4, #0]
 80007ce:	bd38      	pop	{r3, r4, r5, pc}
 80007d0:	200001c0 	.word	0x200001c0

080007d4 <__errno>:
 80007d4:	4b01      	ldr	r3, [pc, #4]	; (80007dc <__errno+0x8>)
 80007d6:	6818      	ldr	r0, [r3, #0]
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop
 80007dc:	20000060 	.word	0x20000060

080007e0 <__libc_init_array>:
 80007e0:	b570      	push	{r4, r5, r6, lr}
 80007e2:	4d0d      	ldr	r5, [pc, #52]	; (8000818 <__libc_init_array+0x38>)
 80007e4:	4c0d      	ldr	r4, [pc, #52]	; (800081c <__libc_init_array+0x3c>)
 80007e6:	1b64      	subs	r4, r4, r5
 80007e8:	10a4      	asrs	r4, r4, #2
 80007ea:	2600      	movs	r6, #0
 80007ec:	42a6      	cmp	r6, r4
 80007ee:	d109      	bne.n	8000804 <__libc_init_array+0x24>
 80007f0:	4d0b      	ldr	r5, [pc, #44]	; (8000820 <__libc_init_array+0x40>)
 80007f2:	4c0c      	ldr	r4, [pc, #48]	; (8000824 <__libc_init_array+0x44>)
 80007f4:	f000 fa56 	bl	8000ca4 <_init>
 80007f8:	1b64      	subs	r4, r4, r5
 80007fa:	10a4      	asrs	r4, r4, #2
 80007fc:	2600      	movs	r6, #0
 80007fe:	42a6      	cmp	r6, r4
 8000800:	d105      	bne.n	800080e <__libc_init_array+0x2e>
 8000802:	bd70      	pop	{r4, r5, r6, pc}
 8000804:	f855 3b04 	ldr.w	r3, [r5], #4
 8000808:	4798      	blx	r3
 800080a:	3601      	adds	r6, #1
 800080c:	e7ee      	b.n	80007ec <__libc_init_array+0xc>
 800080e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000812:	4798      	blx	r3
 8000814:	3601      	adds	r6, #1
 8000816:	e7f2      	b.n	80007fe <__libc_init_array+0x1e>
 8000818:	08000cd0 	.word	0x08000cd0
 800081c:	08000cd0 	.word	0x08000cd0
 8000820:	08000cd0 	.word	0x08000cd0
 8000824:	08000cd4 	.word	0x08000cd4

08000828 <__retarget_lock_init_recursive>:
 8000828:	4770      	bx	lr

0800082a <__retarget_lock_acquire_recursive>:
 800082a:	4770      	bx	lr

0800082c <__retarget_lock_release_recursive>:
 800082c:	4770      	bx	lr
	...

08000830 <_free_r>:
 8000830:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000832:	2900      	cmp	r1, #0
 8000834:	d044      	beq.n	80008c0 <_free_r+0x90>
 8000836:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800083a:	9001      	str	r0, [sp, #4]
 800083c:	2b00      	cmp	r3, #0
 800083e:	f1a1 0404 	sub.w	r4, r1, #4
 8000842:	bfb8      	it	lt
 8000844:	18e4      	addlt	r4, r4, r3
 8000846:	f000 f8df 	bl	8000a08 <__malloc_lock>
 800084a:	4a1e      	ldr	r2, [pc, #120]	; (80008c4 <_free_r+0x94>)
 800084c:	9801      	ldr	r0, [sp, #4]
 800084e:	6813      	ldr	r3, [r2, #0]
 8000850:	b933      	cbnz	r3, 8000860 <_free_r+0x30>
 8000852:	6063      	str	r3, [r4, #4]
 8000854:	6014      	str	r4, [r2, #0]
 8000856:	b003      	add	sp, #12
 8000858:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800085c:	f000 b8da 	b.w	8000a14 <__malloc_unlock>
 8000860:	42a3      	cmp	r3, r4
 8000862:	d908      	bls.n	8000876 <_free_r+0x46>
 8000864:	6825      	ldr	r5, [r4, #0]
 8000866:	1961      	adds	r1, r4, r5
 8000868:	428b      	cmp	r3, r1
 800086a:	bf01      	itttt	eq
 800086c:	6819      	ldreq	r1, [r3, #0]
 800086e:	685b      	ldreq	r3, [r3, #4]
 8000870:	1949      	addeq	r1, r1, r5
 8000872:	6021      	streq	r1, [r4, #0]
 8000874:	e7ed      	b.n	8000852 <_free_r+0x22>
 8000876:	461a      	mov	r2, r3
 8000878:	685b      	ldr	r3, [r3, #4]
 800087a:	b10b      	cbz	r3, 8000880 <_free_r+0x50>
 800087c:	42a3      	cmp	r3, r4
 800087e:	d9fa      	bls.n	8000876 <_free_r+0x46>
 8000880:	6811      	ldr	r1, [r2, #0]
 8000882:	1855      	adds	r5, r2, r1
 8000884:	42a5      	cmp	r5, r4
 8000886:	d10b      	bne.n	80008a0 <_free_r+0x70>
 8000888:	6824      	ldr	r4, [r4, #0]
 800088a:	4421      	add	r1, r4
 800088c:	1854      	adds	r4, r2, r1
 800088e:	42a3      	cmp	r3, r4
 8000890:	6011      	str	r1, [r2, #0]
 8000892:	d1e0      	bne.n	8000856 <_free_r+0x26>
 8000894:	681c      	ldr	r4, [r3, #0]
 8000896:	685b      	ldr	r3, [r3, #4]
 8000898:	6053      	str	r3, [r2, #4]
 800089a:	440c      	add	r4, r1
 800089c:	6014      	str	r4, [r2, #0]
 800089e:	e7da      	b.n	8000856 <_free_r+0x26>
 80008a0:	d902      	bls.n	80008a8 <_free_r+0x78>
 80008a2:	230c      	movs	r3, #12
 80008a4:	6003      	str	r3, [r0, #0]
 80008a6:	e7d6      	b.n	8000856 <_free_r+0x26>
 80008a8:	6825      	ldr	r5, [r4, #0]
 80008aa:	1961      	adds	r1, r4, r5
 80008ac:	428b      	cmp	r3, r1
 80008ae:	bf04      	itt	eq
 80008b0:	6819      	ldreq	r1, [r3, #0]
 80008b2:	685b      	ldreq	r3, [r3, #4]
 80008b4:	6063      	str	r3, [r4, #4]
 80008b6:	bf04      	itt	eq
 80008b8:	1949      	addeq	r1, r1, r5
 80008ba:	6021      	streq	r1, [r4, #0]
 80008bc:	6054      	str	r4, [r2, #4]
 80008be:	e7ca      	b.n	8000856 <_free_r+0x26>
 80008c0:	b003      	add	sp, #12
 80008c2:	bd30      	pop	{r4, r5, pc}
 80008c4:	200001c8 	.word	0x200001c8

080008c8 <sbrk_aligned>:
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4e0e      	ldr	r6, [pc, #56]	; (8000904 <sbrk_aligned+0x3c>)
 80008cc:	460c      	mov	r4, r1
 80008ce:	6831      	ldr	r1, [r6, #0]
 80008d0:	4605      	mov	r5, r0
 80008d2:	b911      	cbnz	r1, 80008da <sbrk_aligned+0x12>
 80008d4:	f000 f9d6 	bl	8000c84 <_sbrk_r>
 80008d8:	6030      	str	r0, [r6, #0]
 80008da:	4621      	mov	r1, r4
 80008dc:	4628      	mov	r0, r5
 80008de:	f000 f9d1 	bl	8000c84 <_sbrk_r>
 80008e2:	1c43      	adds	r3, r0, #1
 80008e4:	d00a      	beq.n	80008fc <sbrk_aligned+0x34>
 80008e6:	1cc4      	adds	r4, r0, #3
 80008e8:	f024 0403 	bic.w	r4, r4, #3
 80008ec:	42a0      	cmp	r0, r4
 80008ee:	d007      	beq.n	8000900 <sbrk_aligned+0x38>
 80008f0:	1a21      	subs	r1, r4, r0
 80008f2:	4628      	mov	r0, r5
 80008f4:	f000 f9c6 	bl	8000c84 <_sbrk_r>
 80008f8:	3001      	adds	r0, #1
 80008fa:	d101      	bne.n	8000900 <sbrk_aligned+0x38>
 80008fc:	f04f 34ff 	mov.w	r4, #4294967295
 8000900:	4620      	mov	r0, r4
 8000902:	bd70      	pop	{r4, r5, r6, pc}
 8000904:	200001cc 	.word	0x200001cc

08000908 <_malloc_r>:
 8000908:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800090c:	1ccd      	adds	r5, r1, #3
 800090e:	f025 0503 	bic.w	r5, r5, #3
 8000912:	3508      	adds	r5, #8
 8000914:	2d0c      	cmp	r5, #12
 8000916:	bf38      	it	cc
 8000918:	250c      	movcc	r5, #12
 800091a:	2d00      	cmp	r5, #0
 800091c:	4607      	mov	r7, r0
 800091e:	db01      	blt.n	8000924 <_malloc_r+0x1c>
 8000920:	42a9      	cmp	r1, r5
 8000922:	d905      	bls.n	8000930 <_malloc_r+0x28>
 8000924:	230c      	movs	r3, #12
 8000926:	603b      	str	r3, [r7, #0]
 8000928:	2600      	movs	r6, #0
 800092a:	4630      	mov	r0, r6
 800092c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000930:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a04 <_malloc_r+0xfc>
 8000934:	f000 f868 	bl	8000a08 <__malloc_lock>
 8000938:	f8d8 3000 	ldr.w	r3, [r8]
 800093c:	461c      	mov	r4, r3
 800093e:	bb5c      	cbnz	r4, 8000998 <_malloc_r+0x90>
 8000940:	4629      	mov	r1, r5
 8000942:	4638      	mov	r0, r7
 8000944:	f7ff ffc0 	bl	80008c8 <sbrk_aligned>
 8000948:	1c43      	adds	r3, r0, #1
 800094a:	4604      	mov	r4, r0
 800094c:	d155      	bne.n	80009fa <_malloc_r+0xf2>
 800094e:	f8d8 4000 	ldr.w	r4, [r8]
 8000952:	4626      	mov	r6, r4
 8000954:	2e00      	cmp	r6, #0
 8000956:	d145      	bne.n	80009e4 <_malloc_r+0xdc>
 8000958:	2c00      	cmp	r4, #0
 800095a:	d048      	beq.n	80009ee <_malloc_r+0xe6>
 800095c:	6823      	ldr	r3, [r4, #0]
 800095e:	4631      	mov	r1, r6
 8000960:	4638      	mov	r0, r7
 8000962:	eb04 0903 	add.w	r9, r4, r3
 8000966:	f000 f98d 	bl	8000c84 <_sbrk_r>
 800096a:	4581      	cmp	r9, r0
 800096c:	d13f      	bne.n	80009ee <_malloc_r+0xe6>
 800096e:	6821      	ldr	r1, [r4, #0]
 8000970:	1a6d      	subs	r5, r5, r1
 8000972:	4629      	mov	r1, r5
 8000974:	4638      	mov	r0, r7
 8000976:	f7ff ffa7 	bl	80008c8 <sbrk_aligned>
 800097a:	3001      	adds	r0, #1
 800097c:	d037      	beq.n	80009ee <_malloc_r+0xe6>
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	442b      	add	r3, r5
 8000982:	6023      	str	r3, [r4, #0]
 8000984:	f8d8 3000 	ldr.w	r3, [r8]
 8000988:	2b00      	cmp	r3, #0
 800098a:	d038      	beq.n	80009fe <_malloc_r+0xf6>
 800098c:	685a      	ldr	r2, [r3, #4]
 800098e:	42a2      	cmp	r2, r4
 8000990:	d12b      	bne.n	80009ea <_malloc_r+0xe2>
 8000992:	2200      	movs	r2, #0
 8000994:	605a      	str	r2, [r3, #4]
 8000996:	e00f      	b.n	80009b8 <_malloc_r+0xb0>
 8000998:	6822      	ldr	r2, [r4, #0]
 800099a:	1b52      	subs	r2, r2, r5
 800099c:	d41f      	bmi.n	80009de <_malloc_r+0xd6>
 800099e:	2a0b      	cmp	r2, #11
 80009a0:	d917      	bls.n	80009d2 <_malloc_r+0xca>
 80009a2:	1961      	adds	r1, r4, r5
 80009a4:	42a3      	cmp	r3, r4
 80009a6:	6025      	str	r5, [r4, #0]
 80009a8:	bf18      	it	ne
 80009aa:	6059      	strne	r1, [r3, #4]
 80009ac:	6863      	ldr	r3, [r4, #4]
 80009ae:	bf08      	it	eq
 80009b0:	f8c8 1000 	streq.w	r1, [r8]
 80009b4:	5162      	str	r2, [r4, r5]
 80009b6:	604b      	str	r3, [r1, #4]
 80009b8:	4638      	mov	r0, r7
 80009ba:	f104 060b 	add.w	r6, r4, #11
 80009be:	f000 f829 	bl	8000a14 <__malloc_unlock>
 80009c2:	f026 0607 	bic.w	r6, r6, #7
 80009c6:	1d23      	adds	r3, r4, #4
 80009c8:	1af2      	subs	r2, r6, r3
 80009ca:	d0ae      	beq.n	800092a <_malloc_r+0x22>
 80009cc:	1b9b      	subs	r3, r3, r6
 80009ce:	50a3      	str	r3, [r4, r2]
 80009d0:	e7ab      	b.n	800092a <_malloc_r+0x22>
 80009d2:	42a3      	cmp	r3, r4
 80009d4:	6862      	ldr	r2, [r4, #4]
 80009d6:	d1dd      	bne.n	8000994 <_malloc_r+0x8c>
 80009d8:	f8c8 2000 	str.w	r2, [r8]
 80009dc:	e7ec      	b.n	80009b8 <_malloc_r+0xb0>
 80009de:	4623      	mov	r3, r4
 80009e0:	6864      	ldr	r4, [r4, #4]
 80009e2:	e7ac      	b.n	800093e <_malloc_r+0x36>
 80009e4:	4634      	mov	r4, r6
 80009e6:	6876      	ldr	r6, [r6, #4]
 80009e8:	e7b4      	b.n	8000954 <_malloc_r+0x4c>
 80009ea:	4613      	mov	r3, r2
 80009ec:	e7cc      	b.n	8000988 <_malloc_r+0x80>
 80009ee:	230c      	movs	r3, #12
 80009f0:	603b      	str	r3, [r7, #0]
 80009f2:	4638      	mov	r0, r7
 80009f4:	f000 f80e 	bl	8000a14 <__malloc_unlock>
 80009f8:	e797      	b.n	800092a <_malloc_r+0x22>
 80009fa:	6025      	str	r5, [r4, #0]
 80009fc:	e7dc      	b.n	80009b8 <_malloc_r+0xb0>
 80009fe:	605b      	str	r3, [r3, #4]
 8000a00:	deff      	udf	#255	; 0xff
 8000a02:	bf00      	nop
 8000a04:	200001c8 	.word	0x200001c8

08000a08 <__malloc_lock>:
 8000a08:	4801      	ldr	r0, [pc, #4]	; (8000a10 <__malloc_lock+0x8>)
 8000a0a:	f7ff bf0e 	b.w	800082a <__retarget_lock_acquire_recursive>
 8000a0e:	bf00      	nop
 8000a10:	200001c4 	.word	0x200001c4

08000a14 <__malloc_unlock>:
 8000a14:	4801      	ldr	r0, [pc, #4]	; (8000a1c <__malloc_unlock+0x8>)
 8000a16:	f7ff bf09 	b.w	800082c <__retarget_lock_release_recursive>
 8000a1a:	bf00      	nop
 8000a1c:	200001c4 	.word	0x200001c4

08000a20 <__sflush_r>:
 8000a20:	898a      	ldrh	r2, [r1, #12]
 8000a22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a26:	4605      	mov	r5, r0
 8000a28:	0710      	lsls	r0, r2, #28
 8000a2a:	460c      	mov	r4, r1
 8000a2c:	d458      	bmi.n	8000ae0 <__sflush_r+0xc0>
 8000a2e:	684b      	ldr	r3, [r1, #4]
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	dc05      	bgt.n	8000a40 <__sflush_r+0x20>
 8000a34:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	dc02      	bgt.n	8000a40 <__sflush_r+0x20>
 8000a3a:	2000      	movs	r0, #0
 8000a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a40:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a42:	2e00      	cmp	r6, #0
 8000a44:	d0f9      	beq.n	8000a3a <__sflush_r+0x1a>
 8000a46:	2300      	movs	r3, #0
 8000a48:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000a4c:	682f      	ldr	r7, [r5, #0]
 8000a4e:	6a21      	ldr	r1, [r4, #32]
 8000a50:	602b      	str	r3, [r5, #0]
 8000a52:	d032      	beq.n	8000aba <__sflush_r+0x9a>
 8000a54:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000a56:	89a3      	ldrh	r3, [r4, #12]
 8000a58:	075a      	lsls	r2, r3, #29
 8000a5a:	d505      	bpl.n	8000a68 <__sflush_r+0x48>
 8000a5c:	6863      	ldr	r3, [r4, #4]
 8000a5e:	1ac0      	subs	r0, r0, r3
 8000a60:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000a62:	b10b      	cbz	r3, 8000a68 <__sflush_r+0x48>
 8000a64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000a66:	1ac0      	subs	r0, r0, r3
 8000a68:	2300      	movs	r3, #0
 8000a6a:	4602      	mov	r2, r0
 8000a6c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a6e:	6a21      	ldr	r1, [r4, #32]
 8000a70:	4628      	mov	r0, r5
 8000a72:	47b0      	blx	r6
 8000a74:	1c43      	adds	r3, r0, #1
 8000a76:	89a3      	ldrh	r3, [r4, #12]
 8000a78:	d106      	bne.n	8000a88 <__sflush_r+0x68>
 8000a7a:	6829      	ldr	r1, [r5, #0]
 8000a7c:	291d      	cmp	r1, #29
 8000a7e:	d82b      	bhi.n	8000ad8 <__sflush_r+0xb8>
 8000a80:	4a29      	ldr	r2, [pc, #164]	; (8000b28 <__sflush_r+0x108>)
 8000a82:	410a      	asrs	r2, r1
 8000a84:	07d6      	lsls	r6, r2, #31
 8000a86:	d427      	bmi.n	8000ad8 <__sflush_r+0xb8>
 8000a88:	2200      	movs	r2, #0
 8000a8a:	6062      	str	r2, [r4, #4]
 8000a8c:	04d9      	lsls	r1, r3, #19
 8000a8e:	6922      	ldr	r2, [r4, #16]
 8000a90:	6022      	str	r2, [r4, #0]
 8000a92:	d504      	bpl.n	8000a9e <__sflush_r+0x7e>
 8000a94:	1c42      	adds	r2, r0, #1
 8000a96:	d101      	bne.n	8000a9c <__sflush_r+0x7c>
 8000a98:	682b      	ldr	r3, [r5, #0]
 8000a9a:	b903      	cbnz	r3, 8000a9e <__sflush_r+0x7e>
 8000a9c:	6560      	str	r0, [r4, #84]	; 0x54
 8000a9e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000aa0:	602f      	str	r7, [r5, #0]
 8000aa2:	2900      	cmp	r1, #0
 8000aa4:	d0c9      	beq.n	8000a3a <__sflush_r+0x1a>
 8000aa6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000aaa:	4299      	cmp	r1, r3
 8000aac:	d002      	beq.n	8000ab4 <__sflush_r+0x94>
 8000aae:	4628      	mov	r0, r5
 8000ab0:	f7ff febe 	bl	8000830 <_free_r>
 8000ab4:	2000      	movs	r0, #0
 8000ab6:	6360      	str	r0, [r4, #52]	; 0x34
 8000ab8:	e7c0      	b.n	8000a3c <__sflush_r+0x1c>
 8000aba:	2301      	movs	r3, #1
 8000abc:	4628      	mov	r0, r5
 8000abe:	47b0      	blx	r6
 8000ac0:	1c41      	adds	r1, r0, #1
 8000ac2:	d1c8      	bne.n	8000a56 <__sflush_r+0x36>
 8000ac4:	682b      	ldr	r3, [r5, #0]
 8000ac6:	2b00      	cmp	r3, #0
 8000ac8:	d0c5      	beq.n	8000a56 <__sflush_r+0x36>
 8000aca:	2b1d      	cmp	r3, #29
 8000acc:	d001      	beq.n	8000ad2 <__sflush_r+0xb2>
 8000ace:	2b16      	cmp	r3, #22
 8000ad0:	d101      	bne.n	8000ad6 <__sflush_r+0xb6>
 8000ad2:	602f      	str	r7, [r5, #0]
 8000ad4:	e7b1      	b.n	8000a3a <__sflush_r+0x1a>
 8000ad6:	89a3      	ldrh	r3, [r4, #12]
 8000ad8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000adc:	81a3      	strh	r3, [r4, #12]
 8000ade:	e7ad      	b.n	8000a3c <__sflush_r+0x1c>
 8000ae0:	690f      	ldr	r7, [r1, #16]
 8000ae2:	2f00      	cmp	r7, #0
 8000ae4:	d0a9      	beq.n	8000a3a <__sflush_r+0x1a>
 8000ae6:	0793      	lsls	r3, r2, #30
 8000ae8:	680e      	ldr	r6, [r1, #0]
 8000aea:	bf08      	it	eq
 8000aec:	694b      	ldreq	r3, [r1, #20]
 8000aee:	600f      	str	r7, [r1, #0]
 8000af0:	bf18      	it	ne
 8000af2:	2300      	movne	r3, #0
 8000af4:	eba6 0807 	sub.w	r8, r6, r7
 8000af8:	608b      	str	r3, [r1, #8]
 8000afa:	f1b8 0f00 	cmp.w	r8, #0
 8000afe:	dd9c      	ble.n	8000a3a <__sflush_r+0x1a>
 8000b00:	6a21      	ldr	r1, [r4, #32]
 8000b02:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000b04:	4643      	mov	r3, r8
 8000b06:	463a      	mov	r2, r7
 8000b08:	4628      	mov	r0, r5
 8000b0a:	47b0      	blx	r6
 8000b0c:	2800      	cmp	r0, #0
 8000b0e:	dc06      	bgt.n	8000b1e <__sflush_r+0xfe>
 8000b10:	89a3      	ldrh	r3, [r4, #12]
 8000b12:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b16:	81a3      	strh	r3, [r4, #12]
 8000b18:	f04f 30ff 	mov.w	r0, #4294967295
 8000b1c:	e78e      	b.n	8000a3c <__sflush_r+0x1c>
 8000b1e:	4407      	add	r7, r0
 8000b20:	eba8 0800 	sub.w	r8, r8, r0
 8000b24:	e7e9      	b.n	8000afa <__sflush_r+0xda>
 8000b26:	bf00      	nop
 8000b28:	dfbffffe 	.word	0xdfbffffe

08000b2c <_fflush_r>:
 8000b2c:	b538      	push	{r3, r4, r5, lr}
 8000b2e:	690b      	ldr	r3, [r1, #16]
 8000b30:	4605      	mov	r5, r0
 8000b32:	460c      	mov	r4, r1
 8000b34:	b913      	cbnz	r3, 8000b3c <_fflush_r+0x10>
 8000b36:	2500      	movs	r5, #0
 8000b38:	4628      	mov	r0, r5
 8000b3a:	bd38      	pop	{r3, r4, r5, pc}
 8000b3c:	b118      	cbz	r0, 8000b46 <_fflush_r+0x1a>
 8000b3e:	6a03      	ldr	r3, [r0, #32]
 8000b40:	b90b      	cbnz	r3, 8000b46 <_fflush_r+0x1a>
 8000b42:	f7ff fc8f 	bl	8000464 <__sinit>
 8000b46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b4a:	2b00      	cmp	r3, #0
 8000b4c:	d0f3      	beq.n	8000b36 <_fflush_r+0xa>
 8000b4e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000b50:	07d0      	lsls	r0, r2, #31
 8000b52:	d404      	bmi.n	8000b5e <_fflush_r+0x32>
 8000b54:	0599      	lsls	r1, r3, #22
 8000b56:	d402      	bmi.n	8000b5e <_fflush_r+0x32>
 8000b58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b5a:	f7ff fe66 	bl	800082a <__retarget_lock_acquire_recursive>
 8000b5e:	4628      	mov	r0, r5
 8000b60:	4621      	mov	r1, r4
 8000b62:	f7ff ff5d 	bl	8000a20 <__sflush_r>
 8000b66:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b68:	07da      	lsls	r2, r3, #31
 8000b6a:	4605      	mov	r5, r0
 8000b6c:	d4e4      	bmi.n	8000b38 <_fflush_r+0xc>
 8000b6e:	89a3      	ldrh	r3, [r4, #12]
 8000b70:	059b      	lsls	r3, r3, #22
 8000b72:	d4e1      	bmi.n	8000b38 <_fflush_r+0xc>
 8000b74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b76:	f7ff fe59 	bl	800082c <__retarget_lock_release_recursive>
 8000b7a:	e7dd      	b.n	8000b38 <_fflush_r+0xc>

08000b7c <__swhatbuf_r>:
 8000b7c:	b570      	push	{r4, r5, r6, lr}
 8000b7e:	460c      	mov	r4, r1
 8000b80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b84:	2900      	cmp	r1, #0
 8000b86:	b096      	sub	sp, #88	; 0x58
 8000b88:	4615      	mov	r5, r2
 8000b8a:	461e      	mov	r6, r3
 8000b8c:	da0d      	bge.n	8000baa <__swhatbuf_r+0x2e>
 8000b8e:	89a3      	ldrh	r3, [r4, #12]
 8000b90:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000b94:	f04f 0100 	mov.w	r1, #0
 8000b98:	bf0c      	ite	eq
 8000b9a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8000b9e:	2340      	movne	r3, #64	; 0x40
 8000ba0:	2000      	movs	r0, #0
 8000ba2:	6031      	str	r1, [r6, #0]
 8000ba4:	602b      	str	r3, [r5, #0]
 8000ba6:	b016      	add	sp, #88	; 0x58
 8000ba8:	bd70      	pop	{r4, r5, r6, pc}
 8000baa:	466a      	mov	r2, sp
 8000bac:	f000 f848 	bl	8000c40 <_fstat_r>
 8000bb0:	2800      	cmp	r0, #0
 8000bb2:	dbec      	blt.n	8000b8e <__swhatbuf_r+0x12>
 8000bb4:	9901      	ldr	r1, [sp, #4]
 8000bb6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8000bba:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8000bbe:	4259      	negs	r1, r3
 8000bc0:	4159      	adcs	r1, r3
 8000bc2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bc6:	e7eb      	b.n	8000ba0 <__swhatbuf_r+0x24>

08000bc8 <__smakebuf_r>:
 8000bc8:	898b      	ldrh	r3, [r1, #12]
 8000bca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000bcc:	079d      	lsls	r5, r3, #30
 8000bce:	4606      	mov	r6, r0
 8000bd0:	460c      	mov	r4, r1
 8000bd2:	d507      	bpl.n	8000be4 <__smakebuf_r+0x1c>
 8000bd4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bd8:	6023      	str	r3, [r4, #0]
 8000bda:	6123      	str	r3, [r4, #16]
 8000bdc:	2301      	movs	r3, #1
 8000bde:	6163      	str	r3, [r4, #20]
 8000be0:	b002      	add	sp, #8
 8000be2:	bd70      	pop	{r4, r5, r6, pc}
 8000be4:	ab01      	add	r3, sp, #4
 8000be6:	466a      	mov	r2, sp
 8000be8:	f7ff ffc8 	bl	8000b7c <__swhatbuf_r>
 8000bec:	9900      	ldr	r1, [sp, #0]
 8000bee:	4605      	mov	r5, r0
 8000bf0:	4630      	mov	r0, r6
 8000bf2:	f7ff fe89 	bl	8000908 <_malloc_r>
 8000bf6:	b948      	cbnz	r0, 8000c0c <__smakebuf_r+0x44>
 8000bf8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bfc:	059a      	lsls	r2, r3, #22
 8000bfe:	d4ef      	bmi.n	8000be0 <__smakebuf_r+0x18>
 8000c00:	f023 0303 	bic.w	r3, r3, #3
 8000c04:	f043 0302 	orr.w	r3, r3, #2
 8000c08:	81a3      	strh	r3, [r4, #12]
 8000c0a:	e7e3      	b.n	8000bd4 <__smakebuf_r+0xc>
 8000c0c:	89a3      	ldrh	r3, [r4, #12]
 8000c0e:	6020      	str	r0, [r4, #0]
 8000c10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c14:	81a3      	strh	r3, [r4, #12]
 8000c16:	9b00      	ldr	r3, [sp, #0]
 8000c18:	6163      	str	r3, [r4, #20]
 8000c1a:	9b01      	ldr	r3, [sp, #4]
 8000c1c:	6120      	str	r0, [r4, #16]
 8000c1e:	b15b      	cbz	r3, 8000c38 <__smakebuf_r+0x70>
 8000c20:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c24:	4630      	mov	r0, r6
 8000c26:	f000 f81d 	bl	8000c64 <_isatty_r>
 8000c2a:	b128      	cbz	r0, 8000c38 <__smakebuf_r+0x70>
 8000c2c:	89a3      	ldrh	r3, [r4, #12]
 8000c2e:	f023 0303 	bic.w	r3, r3, #3
 8000c32:	f043 0301 	orr.w	r3, r3, #1
 8000c36:	81a3      	strh	r3, [r4, #12]
 8000c38:	89a3      	ldrh	r3, [r4, #12]
 8000c3a:	431d      	orrs	r5, r3
 8000c3c:	81a5      	strh	r5, [r4, #12]
 8000c3e:	e7cf      	b.n	8000be0 <__smakebuf_r+0x18>

08000c40 <_fstat_r>:
 8000c40:	b538      	push	{r3, r4, r5, lr}
 8000c42:	4d07      	ldr	r5, [pc, #28]	; (8000c60 <_fstat_r+0x20>)
 8000c44:	2300      	movs	r3, #0
 8000c46:	4604      	mov	r4, r0
 8000c48:	4608      	mov	r0, r1
 8000c4a:	4611      	mov	r1, r2
 8000c4c:	602b      	str	r3, [r5, #0]
 8000c4e:	f7ff fae4 	bl	800021a <_fstat>
 8000c52:	1c43      	adds	r3, r0, #1
 8000c54:	d102      	bne.n	8000c5c <_fstat_r+0x1c>
 8000c56:	682b      	ldr	r3, [r5, #0]
 8000c58:	b103      	cbz	r3, 8000c5c <_fstat_r+0x1c>
 8000c5a:	6023      	str	r3, [r4, #0]
 8000c5c:	bd38      	pop	{r3, r4, r5, pc}
 8000c5e:	bf00      	nop
 8000c60:	200001c0 	.word	0x200001c0

08000c64 <_isatty_r>:
 8000c64:	b538      	push	{r3, r4, r5, lr}
 8000c66:	4d06      	ldr	r5, [pc, #24]	; (8000c80 <_isatty_r+0x1c>)
 8000c68:	2300      	movs	r3, #0
 8000c6a:	4604      	mov	r4, r0
 8000c6c:	4608      	mov	r0, r1
 8000c6e:	602b      	str	r3, [r5, #0]
 8000c70:	f7ff fae3 	bl	800023a <_isatty>
 8000c74:	1c43      	adds	r3, r0, #1
 8000c76:	d102      	bne.n	8000c7e <_isatty_r+0x1a>
 8000c78:	682b      	ldr	r3, [r5, #0]
 8000c7a:	b103      	cbz	r3, 8000c7e <_isatty_r+0x1a>
 8000c7c:	6023      	str	r3, [r4, #0]
 8000c7e:	bd38      	pop	{r3, r4, r5, pc}
 8000c80:	200001c0 	.word	0x200001c0

08000c84 <_sbrk_r>:
 8000c84:	b538      	push	{r3, r4, r5, lr}
 8000c86:	4d06      	ldr	r5, [pc, #24]	; (8000ca0 <_sbrk_r+0x1c>)
 8000c88:	2300      	movs	r3, #0
 8000c8a:	4604      	mov	r4, r0
 8000c8c:	4608      	mov	r0, r1
 8000c8e:	602b      	str	r3, [r5, #0]
 8000c90:	f7ff faec 	bl	800026c <_sbrk>
 8000c94:	1c43      	adds	r3, r0, #1
 8000c96:	d102      	bne.n	8000c9e <_sbrk_r+0x1a>
 8000c98:	682b      	ldr	r3, [r5, #0]
 8000c9a:	b103      	cbz	r3, 8000c9e <_sbrk_r+0x1a>
 8000c9c:	6023      	str	r3, [r4, #0]
 8000c9e:	bd38      	pop	{r3, r4, r5, pc}
 8000ca0:	200001c0 	.word	0x200001c0

08000ca4 <_init>:
 8000ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ca6:	bf00      	nop
 8000ca8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000caa:	bc08      	pop	{r3}
 8000cac:	469e      	mov	lr, r3
 8000cae:	4770      	bx	lr

08000cb0 <_fini>:
 8000cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb2:	bf00      	nop
 8000cb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cb6:	bc08      	pop	{r3}
 8000cb8:	469e      	mov	lr, r3
 8000cba:	4770      	bx	lr
